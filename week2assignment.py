# -*- coding: utf-8 -*-
"""week2assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R5OOZ-cuQcdqTVmqt10-7VHsCiDbSvvT
"""

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def add_to_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = new_node

    def print_list(self):
        if self.head is None:
            print("List is empty.")
        else:
            current = self.head
            while current is not None:
                print(current.data, end=" -> ")
                current = current.next
            print("None")

    def delete_nth_node(self, n):
        if self.head is None:
            print("Cannot delete from an empty list.")
            return

        if n == 1:
            print(f"Deleted: {self.head.data}")
            self.head = self.head.next
            return

        current = self.head
        count = 1

        while current is not None and count < n - 1:
            current = current.next
            count += 1

        if current is None or current.next is None:
            print("Index out of range.")
        else:
            print(f"Deleted: {current.next.data}")
            current.next = current.next.next

ll = LinkedList()
ll.add_to_end(10)
ll.add_to_end(20)
ll.add_to_end(30)
ll.add_to_end(40)

print("Original List:")
ll.print_list()

ll.delete_nth_node(3)
print("After deleting 3rd node:")
ll.print_list()

ll.delete_nth_node(10)
ll.delete_nth_node(1)
ll.print_list()

ll.delete_nth_node(1)
ll.delete_nth_node(1)
ll.delete_nth_node(1)